{"version":3,"file":"static/js/709.a6ef590f.chunk.js","mappings":"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","sources":["components/Chart.jsx","components/Search.jsx","components/Main.jsx","components/database/FireBase.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto';\r\nimport '../css/chart.css';\r\n\r\nexport default function Chart(props) {\r\n  return (\r\n    <div className='chart__body' onClick={() => {props.setBarActive(false)}}>\r\n        <div className='chart__modal' onClick={(e) => e.stopPropagation()}>\r\n          <div className='chart'>\r\n              <Bar data={props.dataForChart}/>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport '../css/search.css';\r\n\r\nexport default function Search({filter, setFilter, setSearchActive, searchActive, setAnalyticsActive}) {\r\n  \r\n\r\n  return (\r\n    <div className='search__modal' onClick={(e) => e.stopPropagation()}>\r\n        <div className='search'>\r\n            <FaTimes className='exit' onClick={() => {setFilter(''); setSearchActive(!searchActive); setAnalyticsActive(false)}}/>\r\n            <h1 className='label'>Search</h1>\r\n            <input className='search_input' value={filter || ''} onChange={(e) => setFilter(e.target.value)} placeholder=\"Enter value\" />\r\n            <p onClick={() => {setFilter('')}} className='clear'>Clear</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\n// import { dataConst } from './Data'; //<== test values (local)\r\nimport { useTable, useSortBy, useGlobalFilter } from 'react-table';\r\nimport Chart from './Chart';\r\nimport '../css/main.css';\r\n// import DataBase from './database/DataBase';\r\nimport {db} from './database/FireBase';\r\nimport {collection, getDocs} from 'firebase/firestore';\r\nimport {BsArrowLeftCircle} from \"react-icons/bs\";\r\nimport { InfinitySpin } from  'react-loader-spinner';\r\nimport Search from './Search';\r\nimport { AiOutlineSortAscending, AiOutlineSortDescending } from \"react-icons/ai\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\n\r\nexport default function Main() {\r\n  const [users, setUsers] = useState([]);\r\n  const usersCollectionRef = collection(db, 'users');\r\n\r\n  // state for loading spinner\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      const data = await getDocs(usersCollectionRef);\r\n        setUsers(data.docs.map(doc => ({\r\n                ...doc.data(),\r\n                // id: doc.id\r\n        }\r\n      )))\r\n      setLoading(false);\r\n    }\r\n\r\n    getUsers();\r\n  }, []);\r\n\r\n\r\n  const data = useMemo(() => users, [users]); // data import | takes some time\r\n  const columns = useMemo(() => [/*{ Header: \"#\", accessor: \"id\", },*/ { Header: \"Name\", accessor: \"name\", }, \r\n    { Header: \"Age\", accessor: \"age\", }, \r\n    { Header: \"Salary\", accessor: \"salary\", },\r\n    { Header: \"Email\", accessor: \"email\", }], []);\r\n\r\n\r\n  const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, state, setGlobalFilter} = useTable({columns, data}, useGlobalFilter, useSortBy);\r\n\r\n  const { globalFilter } = state;\r\n\r\n  const cfg = {\r\n    labels: data.map((d) => (d.age)),\r\n    datasets: [{\r\n      label: \"Global Salary Information\",\r\n      data: data.map((d) => (d.salary)),\r\n      backgroundColor: [\"black\"]\r\n    },\r\n    {\r\n      label: \"Kazakhstan Salary Information\",\r\n      data: data.map((d) => (d.salary*1.33)),\r\n      backgroundColor: [\"aqua\"]\r\n    }]\r\n  };\r\n\r\n  const [barActive, setBarActive] = useState(false); // state for chart modal\r\n  const [analyticsActive, setAnalyticsActive] = useState(false); // state for analytics\r\n  const [searchActive, setSearchActive] = useState(false); // state for search\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {loading && <div className=\"body__spinner\"><InfinitySpin width='200' color=\"white\" /></div>}\r\n      <div style={{display: \"none\"}}>{users.map(user => {\r\n        return <p>{user.id} {user.name} {user.age} {user.salary} {user.email}</p>\r\n    })}</div>\r\n      <div className='container'>\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps({ title: undefined }))}>\r\n                    {column.render(\"Header\")}\r\n                    <span>{column.isSorted ? (column.isSortedDesc ? <AiOutlineSortDescending /> : <AiOutlineSortAscending />) : ''}</span>\r\n                    </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row) => {\r\n              prepareRow(row);\r\n\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  ))}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n      {!analyticsActive ?\r\n      <div onClick={() => setAnalyticsActive(true)} className=\"arrow___analytics___body\">\r\n        <BsArrowLeftCircle  className=\"arrow___analytics\"/>\r\n      </div> \r\n      :\r\n      <div className='arrow___hide' onClick={() => {setAnalyticsActive(false)}}><FaTimes /></div> \r\n      }\r\n      \r\n      {analyticsActive && <button className=\"show___analytics\" onClick={() => setBarActive(true)}>Analytics</button>}\r\n      {analyticsActive &&\r\n      <button className=\"show___search\" onClick={() => {setSearchActive(!searchActive)}}>{searchActive ? 'Search disable' : 'Search enable'}</button>}\r\n      \r\n      {barActive && <Chart dataForChart={cfg} setBarActive={setBarActive}/>}\r\n      {searchActive && <Search filter={globalFilter} setFilter={setGlobalFilter} setSearchActive={setSearchActive} searchActive={searchActive} />}\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import { getFirestore } from '@firebase/firestore';\r\nimport { initializeApp } from 'firebase/app';\r\n\r\nconst API_KEY = \"AIzaSyBEUBgLAMVCeFcx90Ty3WAztJKTia_z3vQ\"\r\nconst APP_ID = \"1:1065349031236:web:81cca4f57961efc026a311\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: API_KEY,\r\n    authDomain: \"salarydb-8f14b.firebaseapp.com\",\r\n    databaseURL: \"https://salarydb-8f14b-default-rtdb.firebaseio.com\",\r\n    projectId: \"salarydb-8f14b\",\r\n    storageBucket: \"salarydb-8f14b.appspot.com\",\r\n    messagingSenderId: \"1065349031236\",\r\n    appId: APP_ID\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const db = getFirestore(app);"],"names":["Chart","props","className","onClick","setBarActive","e","stopPropagation","data","dataForChart","Search","filter","setFilter","setSearchActive","searchActive","setAnalyticsActive","value","onChange","target","placeholder","Main","useState","users","setUsers","usersCollectionRef","collection","db","loading","setLoading","useEffect","getUsers","getDocs","docs","map","doc","useMemo","columns","Header","accessor","useTable","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","cfg","labels","d","age","datasets","label","salary","backgroundColor","barActive","analyticsActive","width","color","style","display","user","id","name","email","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","title","undefined","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","getFirestore"],"sourceRoot":""}